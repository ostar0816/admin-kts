.page-wrapper.resources
  #scholarshipadd.content-wrapper
    ngx-loading([show]='isLoading') 
    form.form-group(#scholarshipForm='ngForm' (ngSubmit)="saveScholarship(scholarshipForm.valid)" novalidate)
      .header-nav.fixed-header
        h1.headers
          | {{title}}
        .button-group(*ngIf="!approval()")
          button.save-button.feedback-btn(type='submit' [ngClass]="{'btn-disabled': readonly(), 'feedback-btn': !readonly()}" [disabled]="readonly()")
            span
              | Save
          button.cancel-button.feedback-btn((click)='goBack()' type='button') 
            span
              | Cancel 
        .button-group(*ngIf="approval()")
          button.save-button(type='button'  (click)='approve()' [ngClass]="{'btn-disabled': !canApprove, 'feedback-btn': canApprove}" [disabled]="!canApprove")
            span
              | Approve
          button.cancel-button((click)='reject()' type='button' [ngClass]="{'reject-disabled': !canApprove, 'feedback-btn': canApprove}" [disabled]="!canApprove") 
            span
              | Reject 
      .applicants-view.fixed-header(*ngIf="disabled && scholarship.users" (click)="gotoApplicants(scholarship.id)")
        | Applicants: {{scholarship.users.length}} 
        img.link-arrow(src="../assets/imgs/link-arrow.svg")  
      .form-content 
        .item-info
          .input-label-top
            | NAME
            .invalid-validation([hidden]="name.valid || (name.pristine && !scholarshipForm.submitted)")
              | Name is required
          input.resources-input(name="name" [(ngModel)]='scholarship.title' [disabled]="disabled()" [ngClass]="{'disabled': disabled()}" #name='ngModel' required )
        .item-info
          .input-label
            | DESCRIPTION
            .invalid-validation([hidden]="details.valid || (details.pristine && !scholarshipForm.submitted)")
              | Description is required
          textarea.resources-textarea(rows='6' name="details" [disabled]="disabled()"  [ngClass]="{'disabled': disabled()}" [(ngModel)]='scholarship.description'  #details="ngModel" required) 
        .item-info
          .input-label-dropdown
            | ORGANIZATION
            .invalid-validation([hidden]="selectedOrganization.length > 0 || !scholarshipForm.submitted")
              | Organization is required
          angular2-multiselect(
            name = 'organization'
            [data]='organizationList | async'
            [(ngModel)]='selectedOrganization'
            [settings]='organizationSelectSettings'
          )
        .item-info
          .input-label
            | APPLICATION LINK
            .invalid-validation([hidden]="link.valid || (link.pristine && !scholarshipForm.submitted)")
              | Application link is required
            .invalid-validation([hidden]="!scholarship.url || scholarship.url === '' || validURL(scholarship.url) || (link.pristine && !scholarshipForm.submitted)")
              | Application link is not correct
          input.resources-input([(ngModel)]='scholarship.url' [disabled]="disabled()" type="email" [ngClass]="{'disabled': disabled()}" name="link" #link='ngModel' required)
        .item-info
          .input-label
            | AMOUNT
            .invalid-validation([hidden]="amount.valid || (amount.pristine && !scholarshipForm.submitted)")
              | Amount is required
          input.resources-input(type="number" [disabled]="disabled()"  [ngClass]="{'disabled': disabled()}" [(ngModel)]='scholarship.amount' name='amount' #amount='ngModel' required)
        .item-info
          .input-label
            | NUMBER AVAILABLE
            .invalid-validation([hidden]="number_available.valid || (number_available.pristine && !scholarshipForm.submitted)")
              | Number available is required
          input.resources-input(type="number" [disabled]="disabled()"  [ngClass]="{'disabled': disabled()}" [(ngModel)]='scholarship.number_available' name="number_available" #number_available="ngModel" required)
        .item-info
          .input-label-dropdown
            | CAREERS
          angular2-multiselect(
            name = 'careers'
            [data]='careerList | async'
            [(ngModel)]='selectedCareers'
            [settings]='careerMultiSettings'
          )    
        .item-info
          .input-label-bold
              | HIGH SCHOOL(S)
          angular2-multiselect(
            name = 'schools'
            [data]='schoolList'
            [(ngModel)]='selectedSchools'
            [settings]='schoolMultiSettings'
          )
        .item-info.checkboxes([tooltip]="tooltip('In App')")
          input(type='checkbox' [(ngModel)]='scholarship.in_app' [disabled]="disabled()" id='in_app' name='in_app')
          label(for='in_app')
            | In App
        .item-info.checkboxes([tooltip]="tooltip('Active')")
          input(type='checkbox' [(ngModel)]='scholarship.active' [disabled]="disabled()" id='active' name='active')
          label(for='active')
            | Active
        .item-info.checkboxes([tooltip]="tooltip('Tuition')")
          input(type='checkbox' [(ngModel)]='tuitionWaiver' [disabled]="disabled()" id='tuition_waiver' name='tuition_waiver')
          label(for='tuition_waiver')
            | Tuition Waiver